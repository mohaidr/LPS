======== Urgent List ========


Gather the logs of each request and its associated response in one log entry
Implement a new watchdog option which is responsetime in MS
correctly calculate the time taken to start and complete a request
Provide Statistics
Put all test plans in one folder
use prompt plus
http 2 
use fluent validation for the domain

======== To Do List ========
//ToDo: Implement CleanUp Cookies

Review the desgin relationships
support for http2
Cookie manager to support custom cookies and support enabling disabling cookies per domain. For now cookies are enabled by defaults for all clients and all domains
redirects - Http Redirections for now is enabled for all domains and all clients

cache manager
shared settings across all requests 
Remove Completed Tasks

command to run multiple plans??


private async Task RemoveCompletedTasks(List<Task> tasks, CancellationToken token)
{
    int sizeInBytes = int.MaxValue;
    while (!token.IsCancellationRequested)
    {
        if (sizeInBytes > 10485760)
        {
            await _logger.LogAsync("1111111111", "Removing completed tasks, list is greater than 10 MB", LoggingLevel.WRN);

            sizeInBytes = tasks.Count * Marshal.SizeOf(typeof(Task));
            var completedTasks = tasks.Where(t => t.IsCompleted || t.IsCanceled || t.IsFaulted).ToList();
            foreach (var task in completedTasks)
            {
                tasks.Remove(task);
            }
        }
        await Task.Delay(20000);
    }
}

Expose Performence Counters

Implement Low and Slow Attacks
    Syn flood attack
    Slowlories attack
    Socket Stress Attack
    R.U.D.Y Attack

======== Done List ========
console logger option - Done
provide an option to not run the test plan after creating it manually - Done
logging per client - done
Logging Correlation Ids - done
Number of clients behavior  - Should I make my queue to track the number of requests per host per all clients? or change the way I deal with clients - Done
Logging Behavior - Done
Exit app after command execution is completed - Done
Implement RunInParallel
Handle Response Payload As Bytes and read it as soon as it arrives
download embedded resources
Resource Usage Tracker
Command to configure file logging options
Command to configure watchdog
Command to configure httpclient

